{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/johnlimkeman/Desktop/Projects/weatherApp/weather-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nconst api = {\n  key: \"fd25d9fc51079308797eba529304b260\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n};\n\nconst dateBuilder = d => {\n  let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  let day = days[d.getDay()];\n  let date = d.getDate();\n  let month = months[d.getMonth()];\n  let year = d.getFullYear();\n  return `${day}, ${date} ${month} ${year}`;\n};\n\nconst timeBuilder = d => {\n  let hours = d.getHours() + 1;\n\n  if (hours > 11 && hours < 24) {\n    //PM\n    if (hours > 12) {\n      hours = hours - 12;\n    }\n\n    return `${hours}:00 PM`;\n  } else {\n    //AM\n    if (hours == 24) {\n      hours = hours - 12;\n    }\n\n    return `${hours}:00 AM`;\n  }\n};\n\nfunction App() {\n  _s();\n\n  const [city, setCity] = useState('');\n  const [weather, setWeather] = useState({\n    \"coord\": {\n      \"lon\": -74.006,\n      \"lat\": 40.7143\n    },\n    \"weather\": [{\n      \"id\": 804,\n      \"main\": \"Clouds\",\n      \"description\": \"overcast clouds\",\n      \"icon\": \"04d\"\n    }],\n    \"base\": \"stations\",\n    \"main\": {\n      \"temp\": 41.29,\n      \"feels_like\": 31.19,\n      \"temp_min\": 37.99,\n      \"temp_max\": 46,\n      \"pressure\": 1015,\n      \"humidity\": 81\n    },\n    \"visibility\": 10000,\n    \"wind\": {\n      \"speed\": 12.66,\n      \"deg\": 30\n    },\n    \"clouds\": {\n      \"all\": 90\n    },\n    \"dt\": 1610730111,\n    \"sys\": {\n      \"type\": 1,\n      \"id\": 4610,\n      \"country\": \"US\",\n      \"sunrise\": 1610713063,\n      \"sunset\": 1610747576\n    },\n    \"timezone\": -18000,\n    \"id\": 5128581,\n    \"name\": \"New York\",\n    \"cod\": 200\n  });\n  const [forecast, setForecast] = useState({\n    \"cod\": \"200\",\n    \"message\": 0,\n    \"cnt\": 8,\n    \"list\": [{\n      \"dt\": 1611187200,\n      \"main\": {\n        \"temp\": 32.38,\n        \"feels_like\": 18.75,\n        \"temp_min\": 30.4,\n        \"temp_max\": 32.38,\n        \"pressure\": 1016,\n        \"sea_level\": 1016,\n        \"grnd_level\": 1016,\n        \"humidity\": 59,\n        \"temp_kf\": 1.1\n      },\n      \"weather\": [{\n        \"id\": 801,\n        \"main\": \"Clouds\",\n        \"description\": \"few clouds\",\n        \"icon\": \"02n\"\n      }],\n      \"clouds\": {\n        \"all\": 18\n      },\n      \"wind\": {\n        \"speed\": 15.26,\n        \"deg\": 325\n      },\n      \"visibility\": 10000,\n      \"pop\": 0,\n      \"sys\": {\n        \"pod\": \"n\"\n      },\n      \"dt_txt\": \"2021-01-21 00:00:00\"\n    }, {\n      \"dt\": 1611198000,\n      \"main\": {\n        \"temp\": 30.11,\n        \"feels_like\": 19.63,\n        \"temp_min\": 28.96,\n        \"temp_max\": 30.11,\n        \"pressure\": 1017,\n        \"sea_level\": 1017,\n        \"grnd_level\": 1016,\n        \"humidity\": 71,\n        \"temp_kf\": 0.64\n      },\n      \"weather\": [{\n        \"id\": 801,\n        \"main\": \"Clouds\",\n        \"description\": \"few clouds\",\n        \"icon\": \"02n\"\n      }],\n      \"clouds\": {\n        \"all\": 16\n      },\n      \"wind\": {\n        \"speed\": 10.04,\n        \"deg\": 317\n      },\n      \"visibility\": 10000,\n      \"pop\": 0,\n      \"sys\": {\n        \"pod\": \"n\"\n      },\n      \"dt_txt\": \"2021-01-21 03:00:00\"\n    }, {\n      \"dt\": 1611208800,\n      \"main\": {\n        \"temp\": 30.15,\n        \"feels_like\": 20.37,\n        \"temp_min\": 29.86,\n        \"temp_max\": 30.15,\n        \"pressure\": 1017,\n        \"sea_level\": 1017,\n        \"grnd_level\": 1016,\n        \"humidity\": 79,\n        \"temp_kf\": 0.16\n      },\n      \"weather\": [{\n        \"id\": 802,\n        \"main\": \"Clouds\",\n        \"description\": \"scattered clouds\",\n        \"icon\": \"03n\"\n      }],\n      \"clouds\": {\n        \"all\": 36\n      },\n      \"wind\": {\n        \"speed\": 9.28,\n        \"deg\": 284\n      },\n      \"visibility\": 10000,\n      \"pop\": 0,\n      \"sys\": {\n        \"pod\": \"n\"\n      },\n      \"dt_txt\": \"2021-01-21 06:00:00\"\n    }, {\n      \"dt\": 1611219600,\n      \"main\": {\n        \"temp\": 30.43,\n        \"feels_like\": 21.43,\n        \"temp_min\": 30.4,\n        \"temp_max\": 30.43,\n        \"pressure\": 1014,\n        \"sea_level\": 1014,\n        \"grnd_level\": 1013,\n        \"humidity\": 84,\n        \"temp_kf\": 0.02\n      },\n      \"weather\": [{\n        \"id\": 802,\n        \"main\": \"Clouds\",\n        \"description\": \"scattered clouds\",\n        \"icon\": \"03n\"\n      }],\n      \"clouds\": {\n        \"all\": 27\n      },\n      \"wind\": {\n        \"speed\": 8.28,\n        \"deg\": 237\n      },\n      \"visibility\": 10000,\n      \"pop\": 0,\n      \"sys\": {\n        \"pod\": \"n\"\n      },\n      \"dt_txt\": \"2021-01-21 09:00:00\"\n    }, {\n      \"dt\": 1611230400,\n      \"main\": {\n        \"temp\": 31.19,\n        \"feels_like\": 20.35,\n        \"temp_min\": 31.19,\n        \"temp_max\": 31.19,\n        \"pressure\": 1011,\n        \"sea_level\": 1011,\n        \"grnd_level\": 1010,\n        \"humidity\": 85,\n        \"temp_kf\": 0\n      },\n      \"weather\": [{\n        \"id\": 802,\n        \"main\": \"Clouds\",\n        \"description\": \"scattered clouds\",\n        \"icon\": \"03n\"\n      }],\n      \"clouds\": {\n        \"all\": 32\n      },\n      \"wind\": {\n        \"speed\": 11.77,\n        \"deg\": 227\n      },\n      \"visibility\": 10000,\n      \"pop\": 0,\n      \"sys\": {\n        \"pod\": \"n\"\n      },\n      \"dt_txt\": \"2021-01-21 12:00:00\"\n    }, {\n      \"dt\": 1611241200,\n      \"main\": {\n        \"temp\": 33.67,\n        \"feels_like\": 21.16,\n        \"temp_min\": 33.67,\n        \"temp_max\": 33.67,\n        \"pressure\": 1009,\n        \"sea_level\": 1009,\n        \"grnd_level\": 1008,\n        \"humidity\": 80,\n        \"temp_kf\": 0\n      },\n      \"weather\": [{\n        \"id\": 804,\n        \"main\": \"Clouds\",\n        \"description\": \"overcast clouds\",\n        \"icon\": \"04d\"\n      }],\n      \"clouds\": {\n        \"all\": 89\n      },\n      \"wind\": {\n        \"speed\": 14.92,\n        \"deg\": 228\n      },\n      \"visibility\": 10000,\n      \"pop\": 0,\n      \"sys\": {\n        \"pod\": \"d\"\n      },\n      \"dt_txt\": \"2021-01-21 15:00:00\"\n    }, {\n      \"dt\": 1611252000,\n      \"main\": {\n        \"temp\": 37.56,\n        \"feels_like\": 26.82,\n        \"temp_min\": 37.56,\n        \"temp_max\": 37.56,\n        \"pressure\": 1005,\n        \"sea_level\": 1005,\n        \"grnd_level\": 1005,\n        \"humidity\": 71,\n        \"temp_kf\": 0\n      },\n      \"weather\": [{\n        \"id\": 804,\n        \"main\": \"Clouds\",\n        \"description\": \"overcast clouds\",\n        \"icon\": \"04d\"\n      }],\n      \"clouds\": {\n        \"all\": 95\n      },\n      \"wind\": {\n        \"speed\": 12.01,\n        \"deg\": 242\n      },\n      \"visibility\": 10000,\n      \"pop\": 0,\n      \"sys\": {\n        \"pod\": \"d\"\n      },\n      \"dt_txt\": \"2021-01-21 18:00:00\"\n    }, {\n      \"dt\": 1611262800,\n      \"main\": {\n        \"temp\": 39.4,\n        \"feels_like\": 30.52,\n        \"temp_min\": 39.4,\n        \"temp_max\": 39.4,\n        \"pressure\": 1004,\n        \"sea_level\": 1004,\n        \"grnd_level\": 1003,\n        \"humidity\": 69,\n        \"temp_kf\": 0\n      },\n      \"weather\": [{\n        \"id\": 803,\n        \"main\": \"Clouds\",\n        \"description\": \"broken clouds\",\n        \"icon\": \"04d\"\n      }],\n      \"clouds\": {\n        \"all\": 53\n      },\n      \"wind\": {\n        \"speed\": 8.93,\n        \"deg\": 258\n      },\n      \"visibility\": 10000,\n      \"pop\": 0,\n      \"sys\": {\n        \"pod\": \"d\"\n      },\n      \"dt_txt\": \"2021-01-21 21:00:00\"\n    }],\n    \"city\": {\n      \"id\": 5128581,\n      \"name\": \"New York\",\n      \"coord\": {\n        \"lat\": 40.7143,\n        \"lon\": -74.006\n      },\n      \"country\": \"US\",\n      \"population\": 8175133,\n      \"timezone\": -18000,\n      \"sunrise\": 1611144911,\n      \"sunset\": 1611179922\n    }\n  });\n\n  const fetchWeather = evt => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${city}&units=imperial&APPID=${api.key}`).then(res => res.json()).then(result => {\n        if (result.cod !== \"404\") {\n          setWeather(result);\n          fetchForecast();\n          setCity('');\n        } else {\n          window.alert(\"Invalid City Name\");\n          setCity('');\n        }\n\n        ;\n      });\n    }\n  };\n\n  const fetchForecast = () => {\n    fetch(`${api.base}forecast?q=${city}&units=imperial&APPID=${api.key}&cnt=8`).then(res => res.json()).then(result => {\n      console.log(result);\n      setForecast(result);\n    });\n  };\n\n  const getBackground = c => {\n    if (c === \"Clear\") {\n      return 'app sunny';\n    } else if (c === \"Clouds\") {\n      if (typeof weather.main != \"undefined\" && weather.weather[0].id > 802) {\n        return 'app cloudy';\n      } else {\n        return 'app partlyCloudy';\n      }\n    } else if (c === \"Rain\" || c === \"Drizzle\") {\n      if (typeof weather.main != \"undefined\" && weather.main.temp > 55) {\n        return 'app warmRain';\n      } else {\n        return 'app coldRain';\n      }\n    } else if (c === \"Thunderstorm\") {\n      return 'app thunder';\n    } else if (c === \"Snow\") {\n      return 'app snow';\n    } else return 'app fog';\n  };\n\n  const getWeatherIcon = w => {\n    let condition = forecast.list[w].weather.id;\n    console.log(condition);\n    let time = new Date(forecast.list[w].dt * 1000);\n    console.log(time);\n    let hour = time.getHours();\n    console.log(hour);\n\n    if (condition >= 200 && condition < 300) {\n      return './assets/weather-icons/thunder-icon.png';\n    } else if (condition >= 300 && condition < 600) {\n      return './assets/weather-icons/rain-icon.png';\n    } else if (condition >= 600 && condition < 700) {\n      return './assets/weather-icons/snow-icon.png';\n    } else if (condition >= 700 && condition < 770) {\n      return './assets/weather-icons/fog-icon.png';\n    } else if (condition === 771 || condition === 781) {\n      return './assets/weather-icon/windy-icon.png';\n    } else if (condition === 800) {\n      if (hour < 6 || hour > 18) {\n        return './assets/weather-icon/moon-icon.png';\n      } else return './assets/weather-icon/sunny-icon.png';\n    } else if (condition === 801 || condition === 802) {\n      if (hour < 6 || hour > 18) {\n        return './assets/weather-icon/cloudyMoon-icon.png';\n      } else return './assets/weather-icon/partlySunny-icon.png';\n    } else {\n      return './assets/weather-icon/cloudy-icon.png';\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: typeof weather.main != \"undefined\" ? getBackground(weather.weather[0].main) : 'app sunny',\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date-box\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date\",\n            children: dateBuilder(new Date())\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"location\",\n            children: weather.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"temp\",\n            children: [Math.round(weather.main.temp), \"\\xB0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"conditions\",\n            children: weather.weather[0].description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hr\",\n            value: forecast.list[0],\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"forecastTime\",\n              children: timeBuilder(new Date(forecast.list[0].dt * 1000))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [Math.round(forecast.list[0].main.temp), \"\\xB0\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: getWeatherIcon(0),\n              alt: \"can't load image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hr\",\n            value: forecast.list[1],\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"forecastTime\",\n              children: timeBuilder(new Date(forecast.list[1].dt * 1000))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [Math.round(forecast.list[1].main.temp), \"\\xB0\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: forecast.list[1].weather.main\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hr\",\n            value: forecast.list[2],\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"forecastTime\",\n              children: timeBuilder(new Date(forecast.list[2].dt * 1000))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [Math.round(forecast.list[2].main.temp), \"\\xB0\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: forecast.list[2].weather.main\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hr\",\n            value: forecast.list[3],\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"forecastTime\",\n              children: timeBuilder(new Date(forecast.list[3].dt * 1000))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [Math.round(forecast.list[3].main.temp), \"\\xB0\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 501,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: forecast.list[3].weather.main\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hr\",\n            value: forecast.list[4],\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"forecastTime\",\n              children: timeBuilder(new Date(forecast.list[4].dt * 1000))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [Math.round(forecast.list[4].main.temp), \"\\xB0\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 507,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: forecast.list[4].weather.main\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hr\",\n            value: forecast.list[5],\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"forecastTime\",\n              children: timeBuilder(new Date(forecast.list[5].dt * 1000))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [Math.round(forecast.list[5].main.temp), \"\\xB0\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: forecast.list[5].weather.main\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hr\",\n            value: forecast.list[6],\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"forecastTime\",\n              children: timeBuilder(new Date(forecast.list[6].dt * 1000))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [Math.round(forecast.list[6].main.temp), \"\\xB0\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: forecast.list[6].weather.main\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hr\",\n            value: forecast.list[7],\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"forecastTime\",\n              children: timeBuilder(new Date(forecast.list[7].dt * 1000))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [Math.round(forecast.list[7].main.temp), \"\\xB0\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: forecast.list[7].weather.main\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"search\",\n          placeholder: \"Search City\",\n          onChange: e => setCity(e.target.value),\n          value: city,\n          onKeyPress: fetchWeather\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 463,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"r8ZnIfTmGA69eXQLvV2hz14ljB4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/johnlimkeman/Desktop/Projects/weatherApp/weather-app/src/App.js"],"names":["React","useState","api","key","base","dateBuilder","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","timeBuilder","hours","getHours","App","city","setCity","weather","setWeather","forecast","setForecast","fetchWeather","evt","fetch","then","res","json","result","cod","fetchForecast","window","alert","console","log","getBackground","c","main","id","temp","getWeatherIcon","w","condition","list","time","Date","dt","hour","name","Math","round","description","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nconst api = {\n  key: \"fd25d9fc51079308797eba529304b260\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n}\nconst dateBuilder = (d) => {\n  let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n  let day = days[d.getDay()];\n  let date = d.getDate();\n  let month = months[d.getMonth()];\n  let year = d.getFullYear();\n\n  return `${day}, ${date} ${month} ${year}`\n\n}\n\nconst timeBuilder = (d) => {\n  let hours = d.getHours() + 1;\n  if (hours > 11 && hours < 24) { //PM\n    if (hours > 12) {\n      hours = hours - 12;\n    }\n    return `${hours}:00 PM`\n  }\n  else { //AM\n    if (hours == 24) {\n      hours = hours - 12;\n    } return `${hours}:00 AM`\n  }\n}\nfunction App() {\n  const [city, setCity] = useState('');\n  const [weather, setWeather] = useState({\n\n    \"coord\": {\n      \"lon\": -74.006,\n      \"lat\": 40.7143\n    },\n    \"weather\": [\n      {\n        \"id\": 804,\n        \"main\": \"Clouds\",\n        \"description\": \"overcast clouds\",\n        \"icon\": \"04d\"\n      }\n    ],\n    \"base\": \"stations\",\n    \"main\": {\n      \"temp\": 41.29,\n      \"feels_like\": 31.19,\n      \"temp_min\": 37.99,\n      \"temp_max\": 46,\n      \"pressure\": 1015,\n      \"humidity\": 81\n    },\n    \"visibility\": 10000,\n    \"wind\": {\n      \"speed\": 12.66,\n      \"deg\": 30\n    },\n    \"clouds\": {\n      \"all\": 90\n    },\n    \"dt\": 1610730111,\n    \"sys\": {\n      \"type\": 1,\n      \"id\": 4610,\n      \"country\": \"US\",\n      \"sunrise\": 1610713063,\n      \"sunset\": 1610747576\n    },\n    \"timezone\": -18000,\n    \"id\": 5128581,\n    \"name\": \"New York\",\n    \"cod\": 200\n\n  });\n\n  const [forecast, setForecast] = useState(\n    {\n      \"cod\": \"200\",\n      \"message\": 0,\n      \"cnt\": 8,\n      \"list\": [\n        {\n          \"dt\": 1611187200,\n          \"main\": {\n            \"temp\": 32.38,\n            \"feels_like\": 18.75,\n            \"temp_min\": 30.4,\n            \"temp_max\": 32.38,\n            \"pressure\": 1016,\n            \"sea_level\": 1016,\n            \"grnd_level\": 1016,\n            \"humidity\": 59,\n            \"temp_kf\": 1.1\n          },\n          \"weather\": [\n            {\n              \"id\": 801,\n              \"main\": \"Clouds\",\n              \"description\": \"few clouds\",\n              \"icon\": \"02n\"\n            }\n          ],\n          \"clouds\": {\n            \"all\": 18\n          },\n          \"wind\": {\n            \"speed\": 15.26,\n            \"deg\": 325\n          },\n          \"visibility\": 10000,\n          \"pop\": 0,\n          \"sys\": {\n            \"pod\": \"n\"\n          },\n          \"dt_txt\": \"2021-01-21 00:00:00\"\n        },\n        {\n          \"dt\": 1611198000,\n          \"main\": {\n            \"temp\": 30.11,\n            \"feels_like\": 19.63,\n            \"temp_min\": 28.96,\n            \"temp_max\": 30.11,\n            \"pressure\": 1017,\n            \"sea_level\": 1017,\n            \"grnd_level\": 1016,\n            \"humidity\": 71,\n            \"temp_kf\": 0.64\n          },\n          \"weather\": [\n            {\n              \"id\": 801,\n              \"main\": \"Clouds\",\n              \"description\": \"few clouds\",\n              \"icon\": \"02n\"\n            }\n          ],\n          \"clouds\": {\n            \"all\": 16\n          },\n          \"wind\": {\n            \"speed\": 10.04,\n            \"deg\": 317\n          },\n          \"visibility\": 10000,\n          \"pop\": 0,\n          \"sys\": {\n            \"pod\": \"n\"\n          },\n          \"dt_txt\": \"2021-01-21 03:00:00\"\n        },\n        {\n          \"dt\": 1611208800,\n          \"main\": {\n            \"temp\": 30.15,\n            \"feels_like\": 20.37,\n            \"temp_min\": 29.86,\n            \"temp_max\": 30.15,\n            \"pressure\": 1017,\n            \"sea_level\": 1017,\n            \"grnd_level\": 1016,\n            \"humidity\": 79,\n            \"temp_kf\": 0.16\n          },\n          \"weather\": [\n            {\n              \"id\": 802,\n              \"main\": \"Clouds\",\n              \"description\": \"scattered clouds\",\n              \"icon\": \"03n\"\n            }\n          ],\n          \"clouds\": {\n            \"all\": 36\n          },\n          \"wind\": {\n            \"speed\": 9.28,\n            \"deg\": 284\n          },\n          \"visibility\": 10000,\n          \"pop\": 0,\n          \"sys\": {\n            \"pod\": \"n\"\n          },\n          \"dt_txt\": \"2021-01-21 06:00:00\"\n        },\n        {\n          \"dt\": 1611219600,\n          \"main\": {\n            \"temp\": 30.43,\n            \"feels_like\": 21.43,\n            \"temp_min\": 30.4,\n            \"temp_max\": 30.43,\n            \"pressure\": 1014,\n            \"sea_level\": 1014,\n            \"grnd_level\": 1013,\n            \"humidity\": 84,\n            \"temp_kf\": 0.02\n          },\n          \"weather\": [\n            {\n              \"id\": 802,\n              \"main\": \"Clouds\",\n              \"description\": \"scattered clouds\",\n              \"icon\": \"03n\"\n            }\n          ],\n          \"clouds\": {\n            \"all\": 27\n          },\n          \"wind\": {\n            \"speed\": 8.28,\n            \"deg\": 237\n          },\n          \"visibility\": 10000,\n          \"pop\": 0,\n          \"sys\": {\n            \"pod\": \"n\"\n          },\n          \"dt_txt\": \"2021-01-21 09:00:00\"\n        },\n        {\n          \"dt\": 1611230400,\n          \"main\": {\n            \"temp\": 31.19,\n            \"feels_like\": 20.35,\n            \"temp_min\": 31.19,\n            \"temp_max\": 31.19,\n            \"pressure\": 1011,\n            \"sea_level\": 1011,\n            \"grnd_level\": 1010,\n            \"humidity\": 85,\n            \"temp_kf\": 0\n          },\n          \"weather\": [\n            {\n              \"id\": 802,\n              \"main\": \"Clouds\",\n              \"description\": \"scattered clouds\",\n              \"icon\": \"03n\"\n            }\n          ],\n          \"clouds\": {\n            \"all\": 32\n          },\n          \"wind\": {\n            \"speed\": 11.77,\n            \"deg\": 227\n          },\n          \"visibility\": 10000,\n          \"pop\": 0,\n          \"sys\": {\n            \"pod\": \"n\"\n          },\n          \"dt_txt\": \"2021-01-21 12:00:00\"\n        },\n        {\n          \"dt\": 1611241200,\n          \"main\": {\n            \"temp\": 33.67,\n            \"feels_like\": 21.16,\n            \"temp_min\": 33.67,\n            \"temp_max\": 33.67,\n            \"pressure\": 1009,\n            \"sea_level\": 1009,\n            \"grnd_level\": 1008,\n            \"humidity\": 80,\n            \"temp_kf\": 0\n          },\n          \"weather\": [\n            {\n              \"id\": 804,\n              \"main\": \"Clouds\",\n              \"description\": \"overcast clouds\",\n              \"icon\": \"04d\"\n            }\n          ],\n          \"clouds\": {\n            \"all\": 89\n          },\n          \"wind\": {\n            \"speed\": 14.92,\n            \"deg\": 228\n          },\n          \"visibility\": 10000,\n          \"pop\": 0,\n          \"sys\": {\n            \"pod\": \"d\"\n          },\n          \"dt_txt\": \"2021-01-21 15:00:00\"\n        },\n        {\n          \"dt\": 1611252000,\n          \"main\": {\n            \"temp\": 37.56,\n            \"feels_like\": 26.82,\n            \"temp_min\": 37.56,\n            \"temp_max\": 37.56,\n            \"pressure\": 1005,\n            \"sea_level\": 1005,\n            \"grnd_level\": 1005,\n            \"humidity\": 71,\n            \"temp_kf\": 0\n          },\n          \"weather\": [\n            {\n              \"id\": 804,\n              \"main\": \"Clouds\",\n              \"description\": \"overcast clouds\",\n              \"icon\": \"04d\"\n            }\n          ],\n          \"clouds\": {\n            \"all\": 95\n          },\n          \"wind\": {\n            \"speed\": 12.01,\n            \"deg\": 242\n          },\n          \"visibility\": 10000,\n          \"pop\": 0,\n          \"sys\": {\n            \"pod\": \"d\"\n          },\n          \"dt_txt\": \"2021-01-21 18:00:00\"\n        },\n        {\n          \"dt\": 1611262800,\n          \"main\": {\n            \"temp\": 39.4,\n            \"feels_like\": 30.52,\n            \"temp_min\": 39.4,\n            \"temp_max\": 39.4,\n            \"pressure\": 1004,\n            \"sea_level\": 1004,\n            \"grnd_level\": 1003,\n            \"humidity\": 69,\n            \"temp_kf\": 0\n          },\n          \"weather\": [\n            {\n              \"id\": 803,\n              \"main\": \"Clouds\",\n              \"description\": \"broken clouds\",\n              \"icon\": \"04d\"\n            }\n          ],\n          \"clouds\": {\n            \"all\": 53\n          },\n          \"wind\": {\n            \"speed\": 8.93,\n            \"deg\": 258\n          },\n          \"visibility\": 10000,\n          \"pop\": 0,\n          \"sys\": {\n            \"pod\": \"d\"\n          },\n          \"dt_txt\": \"2021-01-21 21:00:00\"\n        }\n      ],\n      \"city\": {\n        \"id\": 5128581,\n        \"name\": \"New York\",\n        \"coord\": {\n          \"lat\": 40.7143,\n          \"lon\": -74.006\n        },\n        \"country\": \"US\",\n        \"population\": 8175133,\n        \"timezone\": -18000,\n        \"sunrise\": 1611144911,\n        \"sunset\": 1611179922\n      }\n    });\n\n\n  const fetchWeather = (evt) => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${city}&units=imperial&APPID=${api.key}`)\n        .then(res =>\n          res.json())\n        .then(result => {\n          if (result.cod !== \"404\") {\n            setWeather(result);\n            fetchForecast();\n            setCity('');\n          } else {\n            window.alert(\"Invalid City Name\");\n            setCity('');\n          };\n        });\n    }\n  }\n  const fetchForecast = () => {\n    fetch(`${api.base}forecast?q=${city}&units=imperial&APPID=${api.key}&cnt=8`)\n      .then(res =>\n        res.json())\n      .then(result => {\n        console.log(result);\n        setForecast(result);\n      });\n  };\n  const getBackground = (c) => {\n    if (c === \"Clear\") {\n      return 'app sunny';\n    } else if (c === \"Clouds\") {\n      if (typeof weather.main != \"undefined\" && weather.weather[0].id > 802) {\n        return 'app cloudy';\n      } else {\n        return 'app partlyCloudy';\n      }\n    } else if (c === \"Rain\" || c === \"Drizzle\") {\n      if (typeof weather.main != \"undefined\" && weather.main.temp > 55) {\n        return 'app warmRain'\n      } else {\n        return 'app coldRain';\n      }\n    } else if (c === \"Thunderstorm\") {\n      return 'app thunder';\n    } else if (c === \"Snow\") {\n      return 'app snow';\n    } else return 'app fog'\n  };\n  const getWeatherIcon = (w) => {\n    let condition = forecast.list[w].weather.id\n    console.log(condition);\n    let time = new Date(forecast.list[w].dt * 1000);\n    console.log(time);\n    let hour = time.getHours();\n    console.log(hour);\n\n    if (condition >= 200 && condition < 300) {\n      return './assets/weather-icons/thunder-icon.png';\n    } else if (condition >= 300 && condition < 600) {\n      return './assets/weather-icons/rain-icon.png';\n    } else if (condition >= 600 && condition < 700) {\n      return './assets/weather-icons/snow-icon.png';\n    } else if (condition >= 700 && condition <770) {\n      return './assets/weather-icons/fog-icon.png';\n    } else if (condition === 771 || condition === 781) {\n      return './assets/weather-icon/windy-icon.png';\n    } else if (condition === 800){\n      if (hour < 6 || hour > 18) {\n        return './assets/weather-icon/moon-icon.png';\n      } else return './assets/weather-icon/sunny-icon.png';\n    } else if (condition === 801 || condition === 802){\n      if (hour < 6 || hour > 18) {\n        return './assets/weather-icon/cloudyMoon-icon.png';\n    } else return './assets/weather-icon/partlySunny-icon.png';\n  } else {\n      return './assets/weather-icon/cloudy-icon.png';\n  }\n}\n  return (\n    <div>\n      <div className={(typeof weather.main != \"undefined\") ? getBackground(weather.weather[0].main) : 'app sunny'}>\n        <main>\n\n          <div className=\"date-box\">\n            <div className='date'>{dateBuilder(new Date())}</div>\n          </div>\n\n\n          <div className=\"weather-box\">\n            <div className='location'>{weather.name}</div>\n            <div className=\"temp\">{Math.round(weather.main.temp)}°</div>\n            <div className=\"conditions\" >{weather.weather[0].description}</div>\n          </div>\n\n\n          <div className=\"forecast-box\">\n            <div className=\"hr\" value={forecast.list[0]}>\n              <div className=\"forecastTime\">{timeBuilder(new Date(forecast.list[0].dt * 1000))}\n              </div>\n              <span>{Math.round(forecast.list[0].main.temp)}°</span>\n              <img src={getWeatherIcon(0)} alt=\"can't load image\" />\n            </div>\n            <div className=\"hr\" value={forecast.list[1]}>\n              <div className=\"forecastTime\">{timeBuilder(new Date(forecast.list[1].dt * 1000))}\n              </div>\n              <span>{Math.round(forecast.list[1].main.temp)}°</span>\n              <span>{forecast.list[1].weather.main}</span>\n            </div>\n            <div className=\"hr\" value={forecast.list[2]}>\n              <div className=\"forecastTime\">{timeBuilder(new Date(forecast.list[2].dt * 1000))}\n              </div>\n              <span>{Math.round(forecast.list[2].main.temp)}°</span>\n              <span>{forecast.list[2].weather.main}</span>\n            </div>\n            <div className=\"hr\" value={forecast.list[3]}>\n              <div className=\"forecastTime\">{timeBuilder(new Date(forecast.list[3].dt * 1000))}\n              </div>\n              <span>{Math.round(forecast.list[3].main.temp)}°</span>\n              <span>{forecast.list[3].weather.main}</span>\n            </div>\n            <div className=\"hr\" value={forecast.list[4]}>\n              <div className=\"forecastTime\">{timeBuilder(new Date(forecast.list[4].dt * 1000))}\n              </div>\n              <span>{Math.round(forecast.list[4].main.temp)}°</span>\n              <h6>{forecast.list[4].weather.main}</h6>\n            </div>\n            <div className=\"hr\" value={forecast.list[5]}>\n              <div className=\"forecastTime\">{timeBuilder(new Date(forecast.list[5].dt * 1000))}\n              </div>\n              <span>{Math.round(forecast.list[5].main.temp)}°</span>\n              <span>{forecast.list[5].weather.main}</span>\n            </div>\n            <div className=\"hr\" value={forecast.list[6]}>\n              <div className=\"forecastTime\">{timeBuilder(new Date(forecast.list[6].dt * 1000))}\n              </div>\n              <span>{Math.round(forecast.list[6].main.temp)}°</span>\n              <span>{forecast.list[6].weather.main}</span>\n            </div>\n            <div className=\"hr\" value={forecast.list[7]}>\n              <div className=\"forecastTime\">{timeBuilder(new Date(forecast.list[7].dt * 1000))}\n              </div>\n              <span>{Math.round(forecast.list[7].main.temp)}°</span>\n              <span>{forecast.list[7].weather.main}</span>\n            </div>\n          </div>\n\n\n          <input\n            type=\"text\"\n            className=\"search\"\n            placeholder=\"Search City\"\n            onChange={e => setCity(e.target.value)}\n            value={city}\n            onKeyPress={fetchWeather}\n          />\n        </main>\n      </div>\n    </div>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}