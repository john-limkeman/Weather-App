{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/johnlimkeman/Desktop/Projects/weatherApp/weather-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nconst api = {\n  key: \"fd25d9fc51079308797eba529304b260\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n};\n\nconst dateBuilder = d => {\n  let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  let day = days[d.getDay()];\n  let date = d.getDate();\n  let month = months[d.getMonth()];\n  let year = d.getFullYear();\n  return `${day}, ${date} ${month} ${year}`;\n};\n\nfunction App() {\n  _s();\n\n  const [city, setCity] = useState('');\n  const [weather, setWeather] = useState({\n    \"coord\": {\n      \"lon\": -74.006,\n      \"lat\": 40.7143\n    },\n    \"weather\": [{\n      \"id\": 804,\n      \"main\": \"Clouds\",\n      \"description\": \"overcast clouds\",\n      \"icon\": \"04d\"\n    }],\n    \"base\": \"stations\",\n    \"main\": {\n      \"temp\": 41.29,\n      \"feels_like\": 31.19,\n      \"temp_min\": 37.99,\n      \"temp_max\": 46,\n      \"pressure\": 1015,\n      \"humidity\": 81\n    },\n    \"visibility\": 10000,\n    \"wind\": {\n      \"speed\": 12.66,\n      \"deg\": 30\n    },\n    \"clouds\": {\n      \"all\": 90\n    },\n    \"dt\": 1610730111,\n    \"sys\": {\n      \"type\": 1,\n      \"id\": 4610,\n      \"country\": \"US\",\n      \"sunrise\": 1610713063,\n      \"sunset\": 1610747576\n    },\n    \"timezone\": -18000,\n    \"id\": 5128581,\n    \"name\": \"New York\",\n    \"cod\": 200\n  });\n\n  const fetchWeather = evt => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${city}&units=imperial&APPID=${api.key}`).then(res => res.json()).then(result => {\n        setWeather(result);\n        setCity('');\n        console.log({\n          weather\n        });\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app sunny\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date-box\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date\",\n          children: dateBuilder(new Date())\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"location\",\n          children: weather.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"temp\",\n          children: [Math.round(weather.main.temp), \"\\xB0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"conditions\",\n          children: weather.weather[0].main\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"search\",\n        placeholder: \"Search City\",\n        onChange: e => setCity(e.target.value),\n        value: city,\n        onKeyPress: fetchWeather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"9Y8veg1DnW8pMYnlGeaxvHy6P28=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/johnlimkeman/Desktop/Projects/weatherApp/weather-app/src/App.js"],"names":["React","useState","api","key","base","dateBuilder","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","App","city","setCity","weather","setWeather","fetchWeather","evt","fetch","then","res","json","result","console","log","Date","name","Math","round","main","temp","e","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\n\nconst api = {\n  key: \"fd25d9fc51079308797eba529304b260\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n}\nconst dateBuilder = (d) => {\n  let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n  let day = days[d.getDay()];\n  let date = d.getDate();\n  let month = months[d.getMonth()];\n  let year = d.getFullYear();\n\n  return `${day}, ${date} ${month} ${year}`\n\n}\nfunction App() {\n  const [city, setCity] = useState('');\n  const [weather, setWeather] = useState({\n    \n      \"coord\": {\n          \"lon\": -74.006,\n          \"lat\": 40.7143\n      },\n      \"weather\": [\n          {\n              \"id\": 804,\n              \"main\": \"Clouds\",\n              \"description\": \"overcast clouds\",\n              \"icon\": \"04d\"\n          }\n      ],\n      \"base\": \"stations\",\n      \"main\": {\n          \"temp\": 41.29,\n          \"feels_like\": 31.19,\n          \"temp_min\": 37.99,\n          \"temp_max\": 46,\n          \"pressure\": 1015,\n          \"humidity\": 81\n      },\n      \"visibility\": 10000,\n      \"wind\": {\n          \"speed\": 12.66,\n          \"deg\": 30\n      },\n      \"clouds\": {\n          \"all\": 90\n      },\n      \"dt\": 1610730111,\n      \"sys\": {\n          \"type\": 1,\n          \"id\": 4610,\n          \"country\": \"US\",\n          \"sunrise\": 1610713063,\n          \"sunset\": 1610747576\n      },\n      \"timezone\": -18000,\n      \"id\": 5128581,\n      \"name\": \"New York\",\n      \"cod\": 200\n\n  });\n  \n  const fetchWeather = (evt) => {\n    if (evt.key === \"Enter\") { \n      fetch(`${api.base}weather?q=${city}&units=imperial&APPID=${api.key}`)\n        .then(res =>\n          res.json())\n        .then(result => {\n          setWeather(result);\n          setCity('');\n          console.log({weather});\n        });\n        \n  }\n  }\n  return (\n    <div className=\"app sunny\">\n      <main>\n        <div className=\"date-box\">\n          <div className='date'>{dateBuilder (new Date())}</div>\n        </div>\n        <div className=\"weather-box\">\n          <div className='location'>{weather.name}</div>\n          <div className=\"temp\">{Math.round(weather.main.temp)}°</div>\n          <div className=\"conditions\" >{weather.weather[0].main}</div>\n        </div>\n\n\n        <input\n        type=\"text\"\n        className=\"search\"\n        placeholder=\"Search City\"\n        onChange={e => setCity(e.target.value)}\n        value={city}\n        onKeyPress={fetchWeather}\n        />\n      </main>\n    </div>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}