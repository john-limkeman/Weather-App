{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/johnlimkeman/Desktop/Projects/weather-app/src/App.js\";\nimport React, { Component } from 'react';\nconst api = {\n  key: \"fd25d9fc51079308797eba529304b260\",\n  base: \"api.openweathermap.org/data/2.5/\"\n};\n\nconst dateBuilder = d => {\n  let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  let day = days[d.getDay()];\n  let date = d.getDate();\n  let month = months[d.getMonth()];\n  let year = d.getFullYear();\n  return `${day}, ${date} ${month}, ${year}`;\n};\n\nconst fetchWeather = evt => {\n  if (evt.key === \"Enter\") {\n    fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`).then(res => res.json()).then(result => {\n      this.setState({\n        weather: result\n      });\n      console.log(result);\n    });\n  }\n\n  class App extends Component {\n    constructor(...args) {\n      super(...args);\n      this.state = {\n        weather: [],\n        city: []\n      };\n    }\n\n    render() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app sunny\",\n        children: /*#__PURE__*/_jsxDEV(\"main\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"date\",\n              children: dateBuilder(new Date())\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"location\",\n            children: \" Chicago, IL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"search\",\n            placeholder: \"Search Area\",\n            onChange: e => this.setState({\n              city: e.target.value\n            }),\n            value: this.state.city,\n            onKeyPress: fetchWeather\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }, this);\n    }\n\n  }\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/johnlimkeman/Desktop/Projects/weather-app/src/App.js"],"names":["React","Component","api","key","base","dateBuilder","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","fetchWeather","evt","fetch","query","then","res","json","result","setState","weather","console","log","App","state","city","render","Date","e","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,MAAMC,GAAG,GAAG;AACVC,EAAAA,GAAG,EAAE,kCADK;AAEVC,EAAAA,IAAI,EAAE;AAFI,CAAZ;;AAIA,MAAMC,WAAW,GAAIC,CAAD,IAAO;AACzB,MAAIC,MAAM,GAAG,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,MAAzD,EAAiE,QAAjE,EAA2E,WAA3E,EAAwF,SAAxF,EAAmG,UAAnG,EAA+G,UAA/G,CAAb;AACA,MAAIC,IAAI,GAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,SAArB,EAAgC,WAAhC,EAA6C,UAA7C,EAAyD,QAAzD,EAAmE,UAAnE,CAAX;AAEA,MAAIC,GAAG,GAAGD,IAAI,CAACF,CAAC,CAACI,MAAF,EAAD,CAAd;AACA,MAAIC,IAAI,GAAGL,CAAC,CAACM,OAAF,EAAX;AACA,MAAIC,KAAK,GAAGN,MAAM,CAACD,CAAC,CAACQ,QAAF,EAAD,CAAlB;AACA,MAAIC,IAAI,GAAGT,CAAC,CAACU,WAAF,EAAX;AAEA,SAAQ,GAAEP,GAAI,KAAIE,IAAK,IAAGE,KAAM,KAAIE,IAAK,EAAzC;AAED,CAXD;;AAYA,MAAME,YAAY,GAAIC,GAAD,IAAS;AAC5B,MAAIA,GAAG,CAACf,GAAJ,KAAY,OAAhB,EAAyB;AACvBgB,IAAAA,KAAK,CAAE,GAAEjB,GAAG,CAACE,IAAK,aAAYgB,KAAM,uBAAsBlB,GAAG,CAACC,GAAI,EAA7D,CAAL,CACGkB,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,MAAM,IAAI;AACd,WAAKC,QAAL,CAAc;AAACC,QAAAA,OAAO,EAAEF;AAAV,OAAd;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AACD,KALH;AAMH;;AACD,QAAMK,GAAN,SAAkB5B,SAAlB,CAA4B;AAAA;AAAA;AAAA,WAE1B6B,KAF0B,GAElB;AACNJ,QAAAA,OAAO,EAAE,EADH;AAENK,QAAAA,IAAI,EAAE;AAFA,OAFkB;AAAA;;AAQ5BC,IAAAA,MAAM,GAAE;AACN,0BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACE;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,MAAf;AAAA,wBAAuB3B,WAAW,CAAE,IAAI4B,IAAJ,EAAF;AAAlC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAII;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAOE;AACA,YAAA,IAAI,EAAC,MADL;AAEA,YAAA,SAAS,EAAC,QAFV;AAGA,YAAA,WAAW,EAAC,aAHZ;AAIA,YAAA,QAAQ,EAAEC,CAAC,IAAI,KAAKT,QAAL,CAAc;AAACM,cAAAA,IAAI,EAAEG,CAAC,CAACC,MAAF,CAASC;AAAhB,aAAd,CAJf;AAKA,YAAA,KAAK,EAAE,KAAKN,KAAL,CAAWC,IALlB;AAMA,YAAA,UAAU,EAAEd;AANZ;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAoBD;;AA7B2B;AA+B3B,CAxCD;;AAyCA,eAAeY,GAAf","sourcesContent":["import React, {Component} from 'react';\nconst api = {\n  key: \"fd25d9fc51079308797eba529304b260\",\n  base: \"api.openweathermap.org/data/2.5/\"\n}\nconst dateBuilder = (d) => {\n  let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n  let day = days[d.getDay()];\n  let date = d.getDate();\n  let month = months[d.getMonth()];\n  let year = d.getFullYear();\n\n  return `${day}, ${date} ${month}, ${year}`\n\n}\nconst fetchWeather = (evt) => {\n  if (evt.key === \"Enter\") {\n    fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n      .then(res => res.json())\n      .then(result => {\n        this.setState({weather: result});\n        console.log(result);\n      });\n}\nclass App extends Component {\n\n  state = {\n    weather: [],\n    city: []\n\n  }\n\nrender(){\n  return (\n    <div className=\"app sunny\">\n      <main>\n        <div className=\"date-box\">\n          <div className='date'>{dateBuilder (new Date())}</div>\n        </div>\n          <div className='location'> Chicago, IL</div>\n\n\n        <input\n        type=\"text\"\n        className=\"search\"\n        placeholder=\"Search Area\"\n        onChange={e => this.setState({city: e.target.value})}\n        value={this.state.city}\n        onKeyPress={fetchWeather}\n        />\n      </main>\n    </div>\n  );\n}\n}\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}